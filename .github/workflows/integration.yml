---
name: Build and Test
"on":
  push:
    branches:
      - "*"
    tags:
      - r*
  pull_request:
    branches:
      - "*"
  workflow_call:
jobs:
  style:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"
      - name: Check style
        run: go run mage.go style

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"
      - name: Lint
        run: go run mage.go lint
      - name: Publish Linter Reports
        uses: mikepenz/action-junit-report@v4
        if: always() # always run even if the previous step fails
        with:
          report_paths: '.junit/*.xml'

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"
      - name: Test
        run: go run mage.go test
      - name: Merge Coverage Files
        run: go run mage.go coverage
      - name: Coveralls
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: .cover.out

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"
      - name: Build
        run: go run mage.go binary

#  deploy:
#    runs-on: ubuntu-latest
#    needs:
#      - build
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#      - name: Setup Go
#        uses: actions/setup-go@v2
#      - name: Build Release
#        run: make -j$(cat /proc/cpuinfo | grep processor | wc -l) release
#      - name: Release
#        uses: softprops/action-gh-release@v1
#        if: startsWith(github.ref, 'refs/tags/r')
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          files: |
#            callback-linux-arm.tar.gz
#            callback-linux-arm64.tar.gz
#            callback-linux-x86_64.tar.gz
#            callback-linux-i386.tar.gz
#            callback-windows-i386.zip
#            callback-windows-x86_64.zip
#            callback-darwin-x86_64.tar.gz
#            callback-darwin-arm64.tar.gz
#            callback-freebsd-x86_64.tar.gz